{"version":3,"sources":["../../../src/react-wrapped-components/AccordionGroup/index.js"],"names":["React","strap","AccordionElement","AccordionGroup","Component","constructor","props","uniqueId","Date","getUTCMilliseconds","group","accordionObj","accordionElements","children","Error","accordionArray","Children","toArray","map","child","title","replace","createElement","triggeringElement","className","style","defaultOpen","id","componentDidMount","setAccordion","callback","isToggle","allowMultiple","overrides","toggleClassName","render","DC","isOpen"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport strap from \"../../AccDC/DC\";\r\nimport AccordionElement from '../Accordion'\r\n\r\n/*\r\nUsage:\r\nimport AccordionGroup from './react-wrapped-components/AccordionGroup'\r\nimport Accordion  from './react-wrapped-components/Accordion'\r\n\r\nfunction TriggerElement(props){\r\n\t//create your own optional custom element for the triggering element, the default is a button. Put your props after the {...props} to override the passed in props.\r\n\treturn <h3><button {...props}>{props.children}</button></h3>\r\n}\r\n\r\n//...\r\n// in your render function:\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<AccordionGroup>\r\n\t\t\t\t<Accordion defaultOpen={true} triggeringElement={TriggerElement} title=\"I likeItem1\">Item1</Accordion>\r\n\t\t\t\t<Accordion title=\"Item2\">This is item2</Accordion>\r\n\t\t\t\t<AccordionGroup.Accordion title=\"This is without the need to import Accordion\">This uses the static attribute of AccordionGroup rather than importing a seperate Accordion element.</AccordionGroup.Accordion>\r\n\t\t\t</AccordionGroup>\r\n\t\t)\r\n\t}\r\n*/\r\n\r\nexport default class AccordionGroup extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\tisToggle: true, //says if the accordion should be toggleable\r\n\t\tallowMultiple: false, //says if more than one accordion can be expanded at once.\r\n\t\tcallback: (DC, isOpen)=>{}, // is run every time an accordion is expanded or collapsed\r\n\t\ttoggleClassName: \"open\", // the CSS for when the element is toggled\r\n\t\tclassName: \"accordionGroup\", // className for the accordion group\r\n\t\tstyle: {} // style for the accordion groupe\r\n\t}\r\n\r\n\tstatic Accordion = AccordionElement // can be used instead of importing Accordion. <AccordionGroup.Accordion {..props}>panel content</AccordionGroup.Accordion>\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.uniqueId = `Accordion-component-number${new Date().getUTCMilliseconds()}`\r\n\t\tthis.group = `group-${this.uniqueId}` // you can not have a single accordion placed in a group without a group element\r\n\t\tthis.accordionObj = {} //filled below and used in the componentDidMount\r\n\t\tthis.accordionElements = [] // filled below and used in the componentDidMount\r\n\t\tif(!this.props.children){\r\n\t\t\tthrow new Error(\"AccordionGroup requires <Tab> components as children.\")\r\n\t\t} else {\r\n\t\t\tconst accordionArray = React.Children.toArray(this.props.children)\r\n\t\t\tthis.accordionElements = accordionArray.map(child=>{\r\n\t\t\t\tconst uniqueId = `${child.props.title}-${this.uniqueId}`.replace(/\\s+/g, \"_\") // the replace replaces spaces with _ because spaces don't work in ids very well.\r\n\t\t\t\tthis.accordionObj[`${child.props.title}-${uniqueId}`] = <React.Fragment>{child.props.children}</React.Fragment> // This is what is passed into the componentDidMount function into AccDC\r\n\t\t\t\treturn( <React.Fragment key={uniqueId}>\r\n\t\t\t\t\t{React.createElement(\r\n\t\t\t\t\t\tchild.props.triggeringElement,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tclassName: child.props.className,\r\n\t\t\t\t\t\t\tstyle: child.props.style,\r\n\t\t\t\t\t\t\t\"data-controls\": `${child.props.title}-${uniqueId}`,\r\n\t\t\t\t\t\t\t\"data-insert\": `content-${uniqueId}`,\r\n\t\t\t\t\t\t\t\"data-defaultopen\": child.props.defaultOpen,\r\n\t\t\t\t\t\t\t\"data-accordiongroup\": this.group,\r\n\t\t\t\t\t\t\tid: uniqueId,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchild.props.title\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div id={`content-${uniqueId}`} />\r\n\t\t\t\t</React.Fragment>)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tstrap.setAccordion(\r\n\t\t\tthis,\r\n\t\t\tthis.accordionObj,\r\n\t\t\t{\r\n\t\t\t\tcallback: this.props.callback,\r\n\r\n\t\t\t\tisToggle: this.props.isToggle,\r\n\t\t\t\tallowMultiple: this.props.allowMultiple,\r\n\r\n\t\t\t\toverrides: {\r\n\t\t\t\t\ttoggleClassName: this.props.toggleClassName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div id={this.uniqueId} className={this.props.className} style={this.props.style}>\r\n\t\t\t\t{this.accordionElements}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"],"file":"index.js"}