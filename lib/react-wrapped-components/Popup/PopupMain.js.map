{"version":3,"sources":["../../../src/react-wrapped-components/Popup/PopupMain.js"],"names":["React","strap","PopupQuote","PopupMain","Component","componentDidMount","setPopup","Quote","overrides","className","autoCloseOnTabOut","runAfter","DC","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA;;;;;;;;;;AAWA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClBJ,IAAAA,KAAK,CAACK,QAAN,CACE,IADF,EAEE;AACEC,MAAAA,KAAK,EAAE,oBAAC,UAAD;AADT,KAFF,EAKE;AACEC,MAAAA,SAAS,EAAE;AACTC,QAAAA,SAAS,EAAE,OADF;AAETC,QAAAA,iBAAiB,EAAE,IAFV;AAITC,QAAAA,QAAQ,EAAE,UAASC,EAAT,EAAa,CACrB;AACD;AANQ;AADb,KALF;AAgBD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC;AAAR,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,gCACE,qDADF,CADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,4GADF,CANF,EAYE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,+BACE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,kBAHZ;AAIE,uBAAc,OAJhB;AAKE,oBAAW;AALb,OAOG,GAPH,8CADF,CADF,CAZF,EA0BE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,mGADF,EAIE,gCACE,6EADF,EAEE,0KAFF,EAOE,0CACQ,uCADR,+CACgE,GADhE,EAEE,yCAFF,oCAEgD,0CAFhD,kCAPF,EAYE,+FAZF,CAJF,CA1BF,CADF;AAkDD;;AAtEqC;;AAyExC,eAAeV,SAAf","sourcesContent":["import React from \"react\";\r\nimport strap from \"../../AccDC/DC\";\r\n\r\n/* Directions for Accessible Popups\r\n\r\n1. Import AccDC/DC.\r\n\r\n2. Import or create named React components to render popup content.\r\n\r\n3. Using a native button or link as triggering elements, add the attribute data-popup=\"popup\", and ensure that each triggering element includes a unique ID.\r\n\r\n4. Add a data-controls attribute to each triggering element and make sure the name of the attribute matches the object property name of the related React component as submitted to setPopup().\r\n*/\r\n\r\n// Import the React Popup component that will be dynamically rendered\r\nimport PopupQuote from \"./Excerpt/PopupHamletExcerpt\";\r\n\r\nclass PopupMain extends React.Component {\r\n  componentDidMount() {\r\n    strap.setPopup(\r\n      this,\r\n      {\r\n        Quote: <PopupQuote />\r\n      },\r\n      {\r\n        overrides: {\r\n          className: \"popup\",\r\n          autoCloseOnTabOut: true,\r\n\r\n          runAfter: function(DC) {\r\n            // Do something\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"pg-popup\">\r\n        <div className=\"hd\">\r\n          <h3>\r\n            <span>Accessible Popup</span>\r\n          </h3>\r\n        </div>\r\n        <div className=\"intro highlight\">\r\n          <p>\r\n            A popup control displays information or interactive content as an\r\n            overlay.\r\n          </p>\r\n        </div>\r\n        <div className=\"intro tal demo-block\">\r\n          <p>\r\n            <a\r\n              id=\"popupId\"\r\n              href=\"#popup\"\r\n              className=\"accPopup excerpt\"\r\n              data-controls=\"Quote\"\r\n              data-popup=\"popup\"\r\n            >\r\n              {\" \"}\r\n              Show me the Shakespeare Quote of the Day!\r\n            </a>\r\n          </p>\r\n        </div>\r\n        <div className=\"intro tal keyboard\">\r\n          <p>\r\n            The popup is optimized for screen reader and keyboard only users:\r\n          </p>\r\n          <ul>\r\n            <li>Activate the Quote link to open the popup.</li>\r\n            <li>\r\n              The content will be inserted inline with the triggering element,\r\n              and focus will automatically move to the beginning of the new\r\n              content.\r\n            </li>\r\n            <li>\r\n              Press <kbd>Tab</kbd> to set focus to the Close link and press{\" \"}\r\n              <kbd>Enter</kbd> to close the popup, or press <kbd>Escape</kbd> to\r\n              close the popup directly.\r\n            </li>\r\n            <li>\r\n              When closed, focus will move back to the triggering element.\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopupMain;\r\n"],"file":"PopupMain.js"}