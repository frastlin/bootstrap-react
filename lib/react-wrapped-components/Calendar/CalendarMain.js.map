{"version":3,"sources":["../../../src/react-wrapped-components/Calendar/CalendarMain.js"],"names":["React","DatePicker","$A","window","AccDC","CalendarMain","Component","render","callback","event","DC","inputElement","value","formatDate","close","focus","getElement","partyDC","initialDate","Date","date","getFullYear","getMonth","getDate","minDate","maxDate","presetDate","setDisabled"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport DatePicker from \"./DatePicker/DatePicker\";\r\n\r\n/* Directions for Accessible Date Pickers\r\n\r\n1. Import the general DatePicker object from \"./DatePicker/DatePicker.js\".\r\n\r\n2. Add a <DatePicker> element declaration, and make sure that all of the required attributes are properly set within that element.\r\n*/\r\n\r\nlet $A = window.AccDC;\r\n\r\nclass CalendarMain extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"pg-calendar\">\r\n        <div className=\"hd\">\r\n          <h3>\r\n            <span> Accessible Calendar Picker</span>\r\n          </h3>\r\n        </div>\r\n        <div className=\"intro highlight\">\r\n          <p>\r\n            A calendar picker control simplifies the task of selecting dates by\r\n            rendering a miniature calendar.\r\n          </p>\r\n        </div>\r\n        <div className=\"intro tal demo-block\">\r\n          <div class=\"insertCalendar\">\r\n            <DatePicker\r\n              label=\"Your Birthday:\"\r\n              inputId=\"date\"\r\n              inputName=\"bd\"\r\n              triggerId=\"dateLnk\"\r\n              readOnly=\"readonly\"\r\n              required=\"required\"\r\n              config={{\r\n                callback: function(event, DC, inputElement) {\r\n                  // Perform a custom callback when a date is activated from the calendar instead of using the default module functionality.\r\n                  // event is the event object that was passed to this callback, may be either from onClick or onKeyDown or onKeyUp.\r\n                  // DC is the current calendar DC object instance in the AccDC API (window.AccDC).\r\n                  // DC.date is the Date instance object for the activated date when chosen.\r\n\r\n                  // inputElement is the intended target element for the date string.\r\n                  inputElement.value = DC.formatDate(DC);\r\n                  // Close the calendar after saving the formatted date string as desired.\r\n                  DC.close();\r\n                  // Set focus to the input field to ensure intuitive keyboard accessibility.\r\n                  inputElement.focus();\r\n\r\n                  // Now that a new date has been selected, clear the second input field so it can't include a stored value by mistake.\r\n                  // Gets the input element with id=\"party\"\r\n                  $A.getElement(\"party\").value = \"\";\r\n\r\n                  // Now dynamically set a disabled date range for the second calendar using the newly saved date as the starting point.\r\n\r\n                  // Get a reference to the second calendar's DC object using the 'triggerId' of that element as the reference within AccDC.\r\n                  var partyDC = $A(\"partyLnk\");\r\n\r\n                  // Set a new initial Date instance for Calendar2 (Party Date)\r\n                  // Starts with the initial reference to reflect the recently chosen date for Birthday.\r\n                  partyDC.initialDate = new Date(\r\n                    DC.date.getFullYear(),\r\n                    DC.date.getMonth(),\r\n                    DC.date.getDate()\r\n                  );\r\n\r\n                  // Now set a Date instance as the minimum to start a disabled date range, using partyDC.initialDate as the starting point with -7 days as the offset.\r\n                  partyDC.minDate = new Date(\r\n                    DC.date.getFullYear(),\r\n                    DC.date.getMonth(),\r\n                    DC.date.getDate() + -7\r\n                  );\r\n\r\n                  // Set a Date instance as the maximum to end a disabled date range, using partyDC.initialDate as the starting point with 7 days ahead as the offset.\r\n                  partyDC.maxDate = new Date(\r\n                    DC.date.getFullYear(),\r\n                    DC.date.getMonth(),\r\n                    DC.date.getDate() + 7\r\n                  );\r\n\r\n                  // Now, set all of these variables within Calendar2 to configure it without opening it.\r\n                  partyDC.presetDate(partyDC);\r\n\r\n                  // Now make the second calendar actionable since it was initially disabled when first initialized.\r\n                  partyDC.setDisabled(false);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div class=\"insertCalendar\">\r\n            <DatePicker\r\n              label=\"Party Date:\"\r\n              inputId=\"party\"\r\n              inputName=\"pd\"\r\n              triggerId=\"partyLnk\"\r\n              readOnly=\"readonly\"\r\n              disabled=\"disabled\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"intro tal keyboard\">\r\n          <p>The calendar is keyboard accessible:</p>\r\n          <ul>\r\n            <li>\r\n              Set focus to the input field to automatically open the calendar,\r\n              focus will remain on the input field.\r\n            </li>\r\n            <li>\r\n              When the input has focus, press the\r\n              <kbd className=\"down\">Down</kbd> arrow to set focus on the current\r\n              date within the calendar.\r\n            </li>\r\n            <li>\r\n              Press the <kbd className=\"left\">Left</kbd> and\r\n              <kbd className=\"right\">Right</kbd> arrow keys to navigate the row\r\n              by week day.\r\n            </li>\r\n            <li>\r\n              Press the <kbd className=\"home\">Home</kbd> and\r\n              <kbd className=\"end\">End</kbd> keys to jump to the beginning or\r\n              end of the current row.\r\n            </li>\r\n            <li>\r\n              Press the <kbd className=\"up\">Up</kbd> and\r\n              <kbd className=\"down\">Down</kbd> arrow keys to navigate between\r\n              weeks on the same week day.\r\n            </li>\r\n            <li>\r\n              Press the <kbd>PageDown</kbd> and <kbd>PageUp</kbd> keys to\r\n              navigate backwards or forwards by month.\r\n            </li>\r\n            <li>\r\n              Press\r\n              <kbd>\r\n                <kbd>Alt</kbd>+<kbd>PageDown</kbd>\r\n              </kbd>\r\n              and\r\n              <kbd>\r\n                <kbd>Alt</kbd>+<kbd>PageUp</kbd>\r\n              </kbd>\r\n              to navigate backwards or forwards by year.\r\n            </li>\r\n            <li>\r\n              Press the <kbd>Enter</kbd> key to activate the selected date.\r\n            </li>\r\n            <li>\r\n              Press <kbd>Escape</kbd> to close the calendar without making a\r\n              selection.\r\n            </li>\r\n            <li>Mouse users can click the desired date buttons as usual.</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalendarMain;\r\n"],"file":"CalendarMain.js"}