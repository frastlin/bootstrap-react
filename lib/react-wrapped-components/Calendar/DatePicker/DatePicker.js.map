{"version":3,"sources":["../../../../src/react-wrapped-components/Calendar/DatePicker/DatePicker.js"],"names":["React","strap","$A","window","AccDC","DatePicker","Component","componentDidMount","props","config","inputDateFormat","openOnFocus","openOnFocusHelpText","showEscBtn","escBtnName","escBtnIcon","disabled","overrides","runAfter","DC","removeClass","query","inputId","outOfBounds","isOutOfViewport","outerNode","bottom","scrollBy","top","innerHeight","document","documentElement","clientHeight","bounding","behavior","runAfterClose","addClass","extend","setCalendar","render","label","inputName","readOnly","required","triggerId","require","triggerAlt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport strap from \"../../../AccDC/DC\";\r\nimport \"./css/style.css\";\r\n\r\nlet $A = window.AccDC;\r\n\r\n/* Accessible Date Pickers, General Template Design Pattern\r\n\r\nImport this file as a DatePicker into any external page, and configure each calendar using the attribute overrides provided within the Markup Syntax template to set specific configuration options.\r\n\r\nthis.props.label\r\nthis.props.inputId\r\nthis.props.inputName\r\nthis.props.readOnly\r\nthis.props.disabled\r\nthis.props.required\r\n\r\nthis.props.triggerId\r\nthis.props.triggerAlt\r\n\r\nthis.props.config\r\n\r\n*/\r\n\r\nclass DatePicker extends React.Component {\r\n  componentDidMount() {\r\n    // Save React object properties (this.props) for use within calendar DC object method callbacks.\r\n    var props = this.props;\r\n    // Set default properties to be set if not overridden using this.props.config\r\n    var config = {\r\n      inputDateFormat: \"MM/DD/YYYY\",\r\n\r\n      // Specify if the calendar should open when the input field receives focus.\r\n      // If true, the Down arrow must be pressed to move focus from the input field into the calendar for manual traversal, and Escape will collapse the calendar.\r\n      // Tab will also move focus into the calendar when rendered to prevent confusion.\r\n      openOnFocus: true,\r\n      // Set help text for screen reader users for desktop keyboard usage. (Ignored on mobile using touch.)\r\n      openOnFocusHelpText:\r\n        \"Press Down arrow to browse the calendar, or Escape to close.\",\r\n\r\n      // Display a Close button\r\n      showEscBtn: true,\r\n      escBtnName: \"Close\",\r\n      escBtnIcon: \"&times;\",\r\n\r\n      // Set default calendar state.\r\n      // When true, the disabled attribute will automatically be applied to both the input element and the triggering element button.\r\n      disabled: props.disabled ? true : false,\r\n\r\n      overrides: {\r\n        runAfter: function(DC) {\r\n          // Perform action every time after calendar finishes rendering.\r\n          $A.removeClass(\r\n            $A.query('kbd[data-id=\"' + props.inputId + '\"]')[0],\r\n            \"hidden\"\r\n          );\r\n          var outOfBounds = $A.isOutOfViewport(DC.outerNode);\r\n          if (outOfBounds.bottom) {\r\n            window.scrollBy({\r\n              top:\r\n                (window.innerHeight || document.documentElement.clientHeight) -\r\n                outOfBounds.bounding.bottom,\r\n              behavior: \"smooth\"\r\n            });\r\n          }\r\n        },\r\n        runAfterClose: function(DC) {\r\n          // Perform action every time after calendar finishes closing.\r\n          $A.addClass(\r\n            $A.query('kbd[data-id=\"' + props.inputId + '\"]')[0],\r\n            \"hidden\"\r\n          );\r\n        }\r\n      }\r\n    };\r\n    // Extend config properties with ones passed in using this.props.config as overrides\r\n    $A.extend(true, config, this.props.config || {});\r\n    strap.setCalendar(this, config);\r\n  }\r\n  render() {\r\n    return (\r\n      <span>\r\n        <label htmlFor={this.props.inputId}>{this.props.label}</label>\r\n        <input\r\n          id={this.props.inputId}\r\n          name={this.props.inputName}\r\n          readonly={this.props.readOnly}\r\n          required={this.props.required}\r\n          aria-required={this.props.required ? \"true\" : \"false\"}\r\n          type=\"text\"\r\n          placeholder=\"MM/DD/YYYY\"\r\n          className=\"input-date-field\"\r\n        />\r\n        <kbd className=\"down hidden\" data-id={this.props.inputId} />\r\n        <a\r\n          role=\"button\"\r\n          data-controls={this.props.inputId}\r\n          aria-describedby={this.props.inputId}\r\n          id={this.props.triggerId}\r\n          href=\"#calendar\"\r\n          className=\"accCalendar datePicker\"\r\n          data-widget=\"calendar\"\r\n        >\r\n          <img\r\n            src={require(\"./img/calendar-button.svg\")}\r\n            alt={this.props.triggerAlt || \"Calendar\"}\r\n            title={this.props.triggerAlt || \"Calendar\"}\r\n          />\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatePicker;\r\n"],"file":"DatePicker.js"}