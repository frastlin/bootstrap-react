{"version":3,"sources":["../../../src/react-wrapped-components/Modal/ModalMain.js"],"names":["React","strap","LoginDialog","TimeoutDialog","$A","window","AccDC","ModalMain","Component","componentDidMount","setModal","Login","overrides","id","className","ariaDescribedBy","runAfter","DC","container","query","css","zIndex","modalIndex","Timeout","ariaAlertDialog","handleLogin","ev","triggerObj","target","mount","scheduleTimeout","setTimeout","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport strap from \"../../AccDC/DC\";\r\n\r\n/* Directions for Accessible Modals\r\n\r\n1. Import AccDC/DC.\r\n\r\n2. Import or create named React components to render modal content.\r\n\r\n3. Submit React modal objects to setModal() with relevant behavioral settings as desired.\r\n*/\r\n\r\n// Import the React Modal components that will be dynamically rendered\r\nimport LoginDialog from \"./Login/ModalLoginDialog\";\r\nimport TimeoutDialog from \"./SessionTimeout/ModalSessionTimeoutDialog\";\r\n\r\nlet $A = window.AccDC;\r\n\r\nclass ModalMain extends React.Component {\r\n  componentDidMount() {\r\n    strap.setModal(\r\n      this,\r\n      {\r\n        Login: <LoginDialog />\r\n      },\r\n      {\r\n        overrides: {\r\n          id: \"GlobalLoginDialog\",\r\n\r\n          className: \"outerNode\",\r\n          ariaDescribedBy: \"loginDescriptionId\",\r\n\r\n          runAfter: function(DC) {\r\n            $A(DC.container)\r\n              .query(\"div.modalBackdrop\")\r\n              .css({\r\n                zIndex: DC.modalIndex\r\n              });\r\n            $A(DC.container)\r\n              .query(\"div.modal\")\r\n              .css({\r\n                zIndex: DC.modalIndex + 1\r\n              });\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    strap.setModal(\r\n      this,\r\n      {\r\n        Timeout: <TimeoutDialog />\r\n      },\r\n      {\r\n        overrides: {\r\n          id: \"GlobalTimeoutDialog\",\r\n\r\n          className: \"outerNode\",\r\n          ariaDescribedBy: \"timeoutDescriptionId\",\r\n          ariaAlertDialog: true,\r\n\r\n          runAfter: function(DC) {\r\n            $A(DC.container)\r\n              .query(\"div.modalBackdrop\")\r\n              .css({\r\n                zIndex: DC.modalIndex\r\n              });\r\n            $A(DC.container)\r\n              .query(\"div.modal\")\r\n              .css({\r\n                zIndex: DC.modalIndex + 1\r\n              });\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n  handleLogin(ev) {\r\n    let DC = $A(\"GlobalLoginDialog\");\r\n    if (DC) {\r\n      DC.triggerObj = ev.target;\r\n      DC.mount();\r\n    }\r\n  }\r\n  scheduleTimeout(ev) {\r\n    setTimeout(function() {\r\n      $A(\"GlobalTimeoutDialog\").mount();\r\n    }, 3000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"pg-modal\">\r\n        <div className=\"hd\">\r\n          <h3>\r\n            <span>Accessible Modal</span>\r\n          </h3>\r\n        </div>\r\n        <div className=\"intro highlight\">\r\n          <p>\r\n            A modal control displays information or interactive content that\r\n            must be dismissed before further interaction with the background\r\n            page can occur.\r\n          </p>\r\n        </div>\r\n        <div className=\"intro tal demo-block\">\r\n          <p>\r\n            <button\r\n              id=\"modalId\"\r\n              className=\"accModal lightbox\"\r\n              onClick={ev => this.handleLogin(ev)}\r\n            >\r\n              Login\r\n            </button>\r\n          </p>\r\n          <p>\r\n            <button\r\n              id=\"modalId2\"\r\n              className=\"accModal lightbox\"\r\n              onClick={ev => this.scheduleTimeout(ev)}\r\n            >\r\n              Schedule Session Timeout Dialog\r\n            </button>\r\n          </p>\r\n        </div>\r\n        <div className=\"intro tal keyboard\">\r\n          <p>\r\n            The modal is optimized for screen reader and keyboard only users:\r\n          </p>\r\n          <ul>\r\n            <li>Activate the triggering element to open the modal.</li>\r\n            <li>\r\n              Screen reader users will be confined within the modal content, and\r\n              will not be able to see the background page content.\r\n              <em>\r\n                (Confirmed in both Windows platform and iOS touch screen devices\r\n                using JAWS, NVDA, and VoiceOver)\r\n              </em>\r\n            </li>\r\n            <li>\r\n              Keyboard focus is automatically restricted to active elements\r\n              within the modal, which is handled using HTML5 attributes within\r\n              the first and last focusable elements within the markup.\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalMain;\r\n"],"file":"ModalMain.js"}