{"version":3,"sources":["../../../src/react-wrapped-components/Tabs/TabList.js"],"names":["React","strap","Tab","Content","props","id","TabList","Component","constructor","uniqueId","Date","getUTCMilliseconds","contentId","contentElement","createElement","TabObj","tabElements","children","Error","TabArray","Children","toArray","map","child","title","replace","componentDidMount","setTabList","callback","overrides","toggleClassName","render","tabs","groupElement","className","role","DC","isOpen"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport strap from \"../../AccDC/DC\";\r\nimport Tab from './Tab'\r\n\r\n/*\r\nUsage:\r\n// import the Tab and or TabList component, then do the following:\r\n<TabList>\r\n\t<Tab defaultOpen={true} title=\"Country\">This is country music.</Tab>\r\n\t<TabList.Tab title=\"Rock\">This is rock music</TabList.Tab>\r\n\t<Tab title=\"Clasical\">This is clasical</Tab>\r\n</TabList>\r\n\r\nTab props are:\r\n\tstatic defaultProps = {\r\n\t\t// The only requirements are title and children. Title is a string that is displayed on the tab element, then the children are shown in the tabPannnel.\r\n\t\telement: \"li\", // it should be li, but a custom element can be passed as long as it spreads the props like: {...props}\r\n\t\tclassName: \"accTab tab tab1\",\r\n\t\tdefaultOpen: false, // Will the tab element be open by default?\r\n\t\tstyle: {},\r\n\t}\r\n\r\nTabList default props are:\r\n\tstatic defaultProps = {\r\n\t\tcontentElement: Content, // pass in an element that takes an id as a prop and sets it on a rendered element. You can also just pass in elements for the content itself if that is easier. <Tab title=\"Country\"><h3>This element can be passed in the content section</h3></Tab>\r\n\t\tgroupElement: \"ul\", // the list type for the TabList,\r\n\t\ttoggleClassName: \"active\", // the class that is activated when the tab is made active\r\n\t\tcallback: (DC, isOpen) => {},  // is the callback that is run when select is made\r\n\t}\r\n\r\n\r\n*/\r\n\r\n\r\nfunction Content(props){\r\n\treturn <div className=\"content\" id={props.id} />\r\n}\r\n\r\nexport default class TabList extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\tcontentElement: Content, // pass in an element that takes an id as a prop and sets it on a rendered element. You can also just pass in elements for the content itself if that is easier. <Tab title=\"Country\"><h3>This element can be passed in the content section</h3></Tab>\r\n\t\tgroupElement: \"ul\", // the list type for the TabList,\r\n\t\ttoggleClassName: \"active\", // the class that is activated when the tab is made active\r\n\t\tcallback: (DC, isOpen) => {},  // is the callback that is run when select is made\r\n\t}\r\n\r\n\tstatic Tab = Tab //allows Tab to be accessed through TabList.Tab, so one doesn't need to import Tab and TabList.\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.uniqueId = `Tab-component-number${new Date().getUTCMilliseconds()}`\r\n\t\tthis.contentId = `${this.uniqueId}-content`\r\n\t\tthis.contentElement = React.createElement(this.props.contentElement, {id: this.contentId}, null)\r\n\t\tthis.TabObj = {} //filled below and used in the componentDidMount\r\n\t\tthis.tabElements = [] // filled below and used in the componentDidMount\r\n\t\tif(!this.props.children){\r\n\t\t\tthrow new Error(\"TabGroup requires <Tab> components as children.\")\r\n\t\t} else {\r\n\t\t\tconst TabArray = React.Children.toArray(this.props.children)\r\n\t\t\tthis.tabElements = TabArray.map(child=>{\r\n\t\t\t\tconst uniqueId = `${child.props.title}-${this.uniqueId}`.replace(/\\s+/g, \"_\") // the replace replaces spaces with _ because spaces don't work in ids very well.\r\n\t\t\t\tthis.TabObj[`${child.props.title}-${uniqueId}`] = <React.Fragment>{child.props.children}</React.Fragment> // This is what is passed into the componentDidMount function into AccDC and rendered in the contentPanel\r\n\t\t\t\treturn(<Tab\r\n\t\t\t\t\t{...child.props}\r\n\t\t\t\t\tkey={uniqueId}\r\n\t\t\t\t\t_uniqueId={uniqueId}\r\n\t\t\t\t\t_contentInsertId={this.contentId}\r\n\t\t\t\t>\r\n\t\t\t\t\t{child.props.title}\r\n\t\t\t\t</Tab>\r\n\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tstrap.setTabList(\r\n\t\t\tthis,\r\n\t\t\tthis.TabObj,\r\n\t\t\t{\r\n\t\t\t\tcallback: this.props.callback,\r\n\t\t\t\toverrides: {\r\n\t\t\t\t\ttoggleClassName: this.props.toggleClassName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst tabs = React.createElement(this.props.groupElement, {\r\n\t\t\tid: `${this.uniqueId}-group`,\r\n\t\t\tclassName: \"tabs ARIA\",\r\n\t\t\trole:\"tablist\",\r\n\t\t\t\"aria-level\": \"2\",\r\n\t\t\t},\r\n\t\t\tthis.tabElements\r\n\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{tabs}\r\n\t\t\t\t{this.contentElement}\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}"],"file":"TabList.js"}